#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["toaster", "Material", "Material_wing", "portal", "toast_dark", "toast_light", "bread_light_1", "toast_medium"]
    def "toaster" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        references = @toaster.usdz@
    )
    {
        rel material:binding = </Root/Material> (
            bindMaterialAs = "weakerThanDescendants"
        )
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.001, 0.001, 0.001)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1
            token motionType = "Static"

            def RealityKitStruct "massFrame"
            {
                float m_mass = 10

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double dynamicFriction = 0.1
                double restitution = 0.1
                double staticFriction = 0.1
            }
        }

        def RealityKitComponent "InputTarget" (
            active = false
        )
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (200, 100, 100)
                float height = 66.70497
                float radius = 90.02022
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-2.7077675, 37.51191, 3.1135979)
                }
            }
        }

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex

                over "Shader"
                {
                    color3f inputs:diffuseColor = (0.9575176, 1, 0.081351794) (
                        colorSpace = "srgb_displayp3"
                    )
                    color3f inputs:emissiveColor = (0.7066688, 0.2688082, 0.27007347) (
                        colorSpace = "srgb_displayp3"
                    )
                    float inputs:metallic = 0.8
                }
            }
        }

        over "Geom"
        {
            over "wings" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Material_wing> (
                    bindMaterialAs = "weakerThanDescendants"
                )
            }

            over "wings_001" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Material_wing> (
                    bindMaterialAs = "weakerThanDescendants"
                )
            }
        }
    }

    def Material "Material"
    {
        token outputs:mtlx:surface.connect = </Root/Material/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Material/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (299.25, 99.5)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

        def Shader "PreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor = (0.741982, 0.741982, 0.741982) (
                colorSpace = "srgb_displayp3"
            )
            float inputs:metallic = 0.6
            token outputs:out
            float2 ui:nodegraph:node:pos = (74.25, 99.5)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 1
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:diffuseColor"]
        }

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1) (
                colorSpace = "srgb_displayp3"
            )
            float inputs:metallic = 1
            float inputs:roughness = 0.9
            token outputs:surface
        }
    }

    def Material "Material_wing"
    {
        token outputs:mtlx:surface.connect = </Root/Material_wing/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Material_wing/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (299.25, 99.5)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

        def Shader "PreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            token outputs:out
            float2 ui:nodegraph:node:pos = (74.25, 99.5)
            float2 ui:nodegraph:node:size = (148.5, 199)
        }

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:emissiveColor = (0.96285033, 0.96285033, 0.96285033) (
                colorSpace = "srgb_displayp3"
            )
            token outputs:surface
        }
    }

    def Cylinder "portal" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (1.5707964, 0, 0)
        }
    )
    {
        uniform token axis = "Y"
        double height = 0.1
        rel material:binding = </Root/portal/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
        float3 xformOp:translate = (-0.648456, 1.7433527, 0.14439286)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/portal/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0.4
                float inputs:clearcoatRoughness = 0.05
                color3f inputs:diffuseColor = (0, 0, 0) (
                    colorSpace = "srgb_displayp3"
                )
                color3f inputs:emissiveColor = (0.09416399, 0.096085705, 0.096085705) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:ior = 30
                float inputs:metallic = 1
                float inputs:occlusion = 0.3
                float inputs:opacity = 1
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 0.7388115
        }
    }

    def "toast_dark" (
        active = true
        references = @bread.usdz@
    )
    {
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-0.08848316, 1.3969839e-8, -0.04418748)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "Material"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }

        def RealityKitComponent "RigidBody" (
            active = false
        )
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.63899, 0.55094135, 0.18192063)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.000024408102, -0.0020103157, -0.00035206228)
                }
            }
        }
    }

    def "toast_light" (
        active = true
        prepend references = @toast_light.usdz@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.33084172, 0, -0.04489048)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.15727699, 0.010014024, 0.13946599)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.0013714992, 0.000017999904, -0.00046300143)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }
    }

    def "toast_med" (
        active = true
        prepend references = @toast_med.usdz@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.40607792, -2.9802322e-8, 0.09613174)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.15727699, 0.010014024, 0.13946599)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.0013714992, 0.000017999904, -0.00046300143)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            bool isCCDEnabled = 1

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }
    }
}

